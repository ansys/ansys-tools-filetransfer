name: GitHub CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: "3.9"
  PACKAGE_NAME: "ansys-tools-filetransfer"
  DOCUMENTATION_CNAME: "filetransfer.tools.docs.pyansys.com"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Install dependencies
        run: python -m pip install --upgrade pip poetry tox
      - name: Test with tox
        run: |
          poetry config http-basic.pyansys_private_pypi TOKEN ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}
          tox -e style


  tests:
    name: Tests and coverage
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: python -m pip install --upgrade pip poetry tox tox-gh-actions
      - name: Login in Github Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull server docker image
        run: |
          docker pull ghcr.io/ansys-internal/tools-filetransfer:latest
      - name: Test with tox
        # Only the tox environment specified in the tox.ini gh-actions is run
        run: |
          poetry config http-basic.pyansys_private_pypi TOKEN ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}
          tox


  docs:
    name: Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Install dependencies
        run: python -m pip install --upgrade pip poetry tox
      - name: Generate the documentation with tox
        run: |
          poetry config http-basic.pyansys_private_pypi TOKEN ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}
          tox -e doc
          touch .tox/doc_out/.nojekyll
          echo ${{ env.DOCUMENTATION_CNAME }} > .tox/doc_out/CNAME
      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation-html
          path: .tox/doc_out
          retention-days: 7

  build:
    name: Build library
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies and build the library
        run: |
          python -m pip install --upgrade pip poetry
          poetry config http-basic.pyansys_private_pypi TOKEN ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}
          poetry install -E build
          poetry build
          poetry run twine check dist/*

  upload_dev_docs:
    name: "Upload dev documentation"
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [docs]
    steps:
      - name: Deploy the latest documentation
        uses: ansys/actions/doc-deploy-dev@v5
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          force-orphan: false
